<!--
// Author:
//   Michael Göricke
//
// Copyright (c) 2020
//
// This file is part of ShapeConverter.
//
// ShapeConverter is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program. If not, see<http://www.gnu.org/licenses/> .-->

<UserControl x:Class="ShapeConverter.FileConverter"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:commonviews="clr-namespace:ShapeConverter.Shell.CommonViews"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ShapeConverter.Shell.FileConverter"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             d:DesignHeight="450"
             d:DesignWidth="750"
             SnapsToDevicePixels="True"
             UseLayoutRounding="True"
             mc:Ignorable="d">
    <UserControl.Resources>

        <Style x:Key="ShapeListBoxItemStyle"
               TargetType="ListBoxItem">
            <Setter Property="Control.SnapsToDevicePixels" Value="true" />
            <Setter Property="Control.OverridesDefaultStyle" Value="true" />
            <Setter Property="Control.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Border"
                                Padding="2"
                                SnapsToDevicePixels="true">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent" />
                            </Border.Background>
                            <Grid>
                                <Rectangle x:Name="Separator"
                                           Height="1"
                                           Margin="4,0,4,0"
                                           VerticalAlignment="Top"
                                           Fill="#FFE0E0E0" />

                                <ContentPresenter Margin="0,4,0,0" />
                                <Grid Width="22"
                                      Height="22"
                                      Margin="0,4,0,0"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Top"
                                      IsHitTestVisible="False">
                                    <Ellipse Fill="White" />
                                    <Ellipse Width="18"
                                             Height="18"
                                             Fill="White"
                                             Stroke="#FF909090"
                                             StrokeThickness="1" />
                                    <Path x:Name="CheckedIndicator"
                                          Width="10"
                                          Height="10"
                                          Data="M0,30 L 25,50 L58,0"
                                          Stretch="Uniform"
                                          Stroke="#FF909090"
                                          StrokeThickness="2"
                                          Visibility="{Binding IsSelected,
                                                               Converter={StaticResource BooleanToVisibilityConverter}}" />
                                </Grid>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}"
                                         Value="{x:Null}">
                                <Setter TargetName="Separator" Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Grid>
        <TextBlock Margin="173,11,0,0"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Text="File"
                   TextWrapping="Wrap" />
        <TextBox Height="23"
                 Margin="172,27,41,0"
                 VerticalAlignment="Top"
                 Text="{Binding Filename,
                                UpdateSourceTrigger=PropertyChanged}" />
        <Button Width="26"
                Height="23"
                Margin="0,27,10,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Command="{Binding SelectFile}"
                Content="..." />
        <Grid Margin="0,79,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="172"
                                  MinWidth="50" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <!--
                An ItemsControl would be fine here. But we use a ListBox because
                it supports virtualization out of the box. The loading time of big files
                (1000 shapes or more per file) is reduced significantly by the virtualization.
                Because of the virtualization we cannot select items from code, so we do that
                with our own logic on view model level.
            -->
            <ListBox x:Name="ShapeSelectionBox"
                     Margin="10,23,10,10"
                     ItemContainerStyle="{StaticResource ShapeListBoxItemStyle}"
                     ItemsSource="{Binding PreviewIcons}"
                     VirtualizingPanel.IsContainerVirtualizable="True"
                     VirtualizingPanel.IsVirtualizing="True"
                     VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                     VirtualizingPanel.ScrollUnit="Pixel">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="2">
                            <Button Command="{Binding PreviewSelectionChange}"
                                    Style="{StaticResource TransparentButtonStyle}">
                                <Grid Width="100"
                                      Height="50"
                                      Margin="2">
                                    <Rectangle Fill="{Binding Brush}" />
                                </Grid>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <TabControl Grid.Column="1"
                        Margin="0,0,10,10">
                <TabItem Header="Preview">
                    <local:PreviewView DataContext="{Binding PreviewViewModel}" />
                </TabItem>
                <TabItem Header="Resource">
                    <commonviews:ResourceView DataContext="{Binding ResourceViewModel}" />
                </TabItem>
                <TabItem Header="XAML">
                    <commonviews:XamlView DataContext="{Binding XamlViewModel}" />
                </TabItem>
                <TabItem Header="C#">
                    <commonviews:CSharpView DataContext="{Binding CSharpViewModel}" />
                </TabItem>
                <TabItem Header="Export">
                    <commonviews:ExportView DataContext="{Binding ExportViewModel}" />
                </TabItem>
            </TabControl>
            <Path Grid.Column="1"
                  Width="100"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="{StaticResource SadIcon}"
                  Fill="{StaticResource SadTextBrush}"
                  Stretch="Uniform"
                  Visibility="{Binding ShowError,
                                       Converter={StaticResource BooleanToVisibilityConverter}}" />
        </Grid>
        <Button Width="140"
                Margin="11,79,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Command="{Binding SelectAll}"
                Content="Shapes"
                Style="{StaticResource CheckButtonStyle}" />
    </Grid>
</UserControl>
